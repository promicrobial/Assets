#!/bin/bash

#######################################
#                                     #
#          Benchpress v1.0            #
#                                     #
#######################################

##############################################################################
# Author: Nathaniel Cole (nc564@cornell.edu)                                 #
# GitHub: promicrobial (https://github.com/promicrobial)                     #
# Date: 08-05-25                                                             #
# License: MIT                                                               #
# Version: 1.0.0                                                             #
#                                                                            #
# Description:                                                               #
#   A comprehensive system benchmarking tool that tests:                     #
#   - CPU performance (single and multi-threaded)                            #
#   - Memory operations (read/write)                                         #
#   - File I/O performance                                                   #
#   - Thread handling                                                        #
#   - Mutex operations                                                       #
#                                                                            #
# Dependencies:                                                              #
#   - sysbench: System performance benchmark tool                            #
#     - Tool: https://github.com/akopytov/sysbench                           #
#                                                                            #
# Usage:                                                                     #
#   ./benchpress.sh                                                          #
#                                                                            #
# Last updated: 13-05-25                                                     #
##############################################################################

# Strict error handling
# -e: Exit immediately if a command exits with non-zero status
# -u: Treat unset variables as an error
# -o pipefail: Return value of a pipeline is the status of the last command
set -euo pipefail

################################################################################
# Global Variables and Settings                                                #
################################################################################

# Timestamp for the report
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
REPORT_DATE=$(date '+%Y%m%d_%H%M%S')

################################################################################
# Functions                                                                    #
################################################################################

# Function: check_sysbench
# Description: Verifies sysbench installation and provides installation instructions
# Arguments: none
# Returns: 0 if sysbench is installed, exits with 1 if not
# Usage: check_sysbench
check_sysbench() {
    if ! command -v sysbench &> /dev/null; then
        log_error "sysbench is not installed"
        cat << EOF
Please install sysbench using one of the following methods:
Ubuntu/Debian: sudo apt-get install sysbench
CentOS/RHEL:  sudo yum install sysbench
Manual build: https://github.com/akopytov/sysbench#building-from-source
EOF
        exit 1
    fi
}

# Function to print section headers
print_header() {
    echo -e "## $1\n" >> "$REPORT_FILE"
}

# Function to print results
print_subheader() {
    echo -e "### $1\n" >> "$REPORT_FILE"
}

# Function: run_cpu_benchmark
# Description: Performs CPU performance testing with single and multi-threaded operations
# Arguments: none
# Output: Prints CPU benchmark results
# Usage: run_cpu_benchmark
run_cpu_benchmark() {
    print_header "CPU Benchmark"
    echo "Running CPU performance test..." >&2
    
    # CPU test with different numbers of threads
for threads in 1 $(nproc); do
        print_subheader "CPU Test with $threads thread(s)"
        sysbench cpu \
            --cpu-max-prime=20000 \
            --threads=$threads \
            run | grep -E "total time:|events per second:|total number of events:|min:|avg:|max:|95th percentile:" | \
            sed 's/^/    /' >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
    done
}

# Function: run_memory_benchmark
# Description: Tests memory performance with read and write operations
# Arguments: none
# Output: Prints memory benchmark results
# Usage: run_memory_benchmark
run_memory_benchmark() {
    print_header "Memory Benchmark"
    echo "Running memory performance tests..." >&2
    
    for operation in read write; do
        print_subheader "Memory $operation operations"
        sysbench memory \
            --memory-block-size=1K \
            --memory-total-size=100G \
            --memory-oper=$operation \
            --threads=$(nproc) \
            run | grep -E "Operations performed:|Total operations:|Transferred|Speed:|min:|avg:|max:|95th percentile:" | \
            sed 's/^/    /' >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
    done
}

# Function: run_fileio_benchmark
# Description: Performs file I/O testing with various operations
# Arguments: none
# Output: Prints file I/O benchmark results
# Usage: run_fileio_benchmark
run_fileio_benchmark() {
    print_header "File I/O Benchmark"
    echo "Running file I/O performance tests..." >&2
    
    sysbench fileio --file-total-size=4G prepare >&2
    
    for mode in seqrd seqwr seqrewr rndrd rndwr rndrw; do
        print_subheader "File I/O Mode: $mode"
        sysbench fileio \
            --file-total-size=4G \
            --file-test-mode=$mode \
            --time=30 \
            --threads=$(nproc) \
            run | grep -E "reads/s:|writes/s:|fsyncs/s:|read, MiB/s:|written, MiB/s:|min:|avg:|max:|95th percentile:" | \
            sed 's/^/    /' >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
    done
    
    sysbench fileio --file-total-size=4G cleanup >&2
}

# Function: run_thread_benchmark
# Description: Tests thread handling capabilities of the system
# Arguments: none
# Output: Prints thread benchmark results
# Usage: run_thread_benchmark
run_thread_benchmark() {
    print_header "Thread Benchmark"
    echo "Running thread performance tests..." >&2
    
    sysbench threads \
        --threads=$(nproc) \
        --thread-yields=1000 \
        --time=30 \
        run | grep -E "total time:|events per second:|total number of events:|min:|avg:|max:|95th percentile:" | \
        sed 's/^/    /' >> "$REPORT_FILE"
    echo "" >> "$REPORT_FILE"
}

# Function: run_mutex_benchmark
# Description: Tests mutex operations performance
# Arguments: none
# Output: Prints mutex benchmark results
# Usage: run_mutex_benchmark
run_mutex_benchmark() {
    print_header "Mutex Benchmark"
    echo "Running mutex performance tests..." >&2
    
    sysbench mutex \
        --threads=$(nproc) \
        --mutex-num=1000 \
        --mutex-locks=100000 \
        --mutex-loops=10000 \
        run | grep -E "total time:|events per second:|total number of events:|min:|avg:|max:|95th percentile:" | \
        sed 's/^/    /' >> "$REPORT_FILE"
    echo "" >> "$REPORT_FILE"
}

# Function to create report header
create_report_header() {
    cat << EOF > "$REPORT_FILE"
# System Benchmark Report

**Generated:** $TIMESTAMP

## System Information

- **CPU:** $(grep "model name" /proc/cpuinfo | head -n1 | cut -d: -f2)
- **Cores:** $(nproc)
- **Memory:** $(free -h | grep Mem | awk '{print $2}')
- **OS:** $(cat /etc/os-release | grep PRETTY_NAME | cut -d= -f2 | tr -d '"')

EOF
}

# Main benchmark execution
main() {
    # Set report filename
    REPORT_FILE="benchmark_report_${REPORT_DATE}.md"
    
    # Check if sysbench is installed
    check_sysbench
    
    # Start time
    start_time=$(date +%s)
    
    echo "Starting System Benchmark..."
    echo "This will take several minutes to complete..."
    
    # Create report header
    create_report_header
    
    # Run all benchmarks
    run_cpu_benchmark
    run_memory_benchmark
    run_fileio_benchmark
    run_thread_benchmark
    run_mutex_benchmark
    
    # End time
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    
    # Add completion information
    cat << EOF >> "$REPORT_FILE"
## Benchmark Summary

- **Total Duration:** ${duration} seconds
- **Completion Time:** $(date '+%Y-%m-%d %H:%M:%S')

---
*Report generated by Benchpress v1.1.0*
EOF
    
    echo "Benchmark complete! Report saved to: $REPORT_FILE"
}


# Run the benchmark
main "$@"